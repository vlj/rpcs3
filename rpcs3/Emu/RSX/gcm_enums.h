#pragma once

enum
{
	CELL_GCM_DISPLAY_HSYNC = 1,
	CELL_GCM_DISPLAY_VSYNC = 2,
	CELL_GCM_DISPLAY_HSYNC_WITH_NOISE = 3,
};

enum
{
	CELL_GCM_DEBUG_LEVEL0 = 1,
	CELL_GCM_DEBUG_LEVEL1 = 2,
	CELL_GCM_DEBUG_LEVEL2 = 3,
};

enum
{
	CELL_GCM_DISPLAY_FREQUENCY_59_94HZ = 1,
	CELL_GCM_DISPLAY_FREQUENCY_SCANOUT = 2,
	CELL_GCM_DISPLAY_FREQUENCY_DISABLE = 3,
};

namespace rsx
{
	enum class vertex_base_type : u8
	{
		s1, ///< signed byte
		f, ///< float
		sf, ///< half float
		ub, ///< unsigned byte interpreted as 0.f and 1.f
		s32k, ///< signed 32bits int
		cmp, ///< compressed aka X11G11Z10 and always 1. W.
		ub256, ///< unsigned byte interpreted as between 0 and 255.
	};

	enum class index_array_type : u8
	{
		u32,
		u16,
	};

	enum class primitive_type : u8
	{
		points,
		lines,
		line_loop, // line strip with last end being joined with first end.
		line_strip,
		triangles,
		triangle_strip,
		triangle_fan, // like strip except that every triangle share the first vertex and one instead of 2 from previous triangle.
		quads,
		quad_strip,
		polygon, // convex polygon
	};

	enum class surface_target : u8
	{
		none,
		surface_a,
		surface_b,
		surfaces_a_b,
		surfaces_a_b_c,
		surfaces_a_b_c_d,
	};

	enum class surface_depth_format : u8
	{
		z16, // unsigned 16 bits depth
		z24s8, // unsigned 24 bits depth + 8 bits stencil
	};

	enum class surface_antialiasing : u8
	{
		center_1_sample,
		diagonal_centered_2_samples,
		square_centered_4_samples,
		square_rotated_4_samples,
	};

	enum class surface_color_format : u8
	{
		x1r5g5b5_z1r5g5b5,
		x1r5g5b5_o1r5g5b5,
		r5g6b5,
		x8r8g8b8_z8r8g8b8,
		x8r8g8b8_o8r8g8b8,
		a8r8g8b8,
		b8,
		g8b8,
		w16z16y16x16,
		w32z32y32x32,
		x32,
		x8b8g8r8_z8b8g8r8,
		x8b8g8r8_o8b8g8r8,
		a8b8g8r8,
	};

	enum class window_origin : u8
	{
		top,
		bottom
	};

	enum class window_pixel_center : u8
	{
		half,
		integer
	};

	enum class comparaison_function : u8
	{
		never,
		less,
		equal,
		less_or_equal,
		greater,
		not_equal,
		greater_or_equal,
		always
	};

	enum class fog_mode : u8
	{
		linear,
		exponential,
		exponential2,
		exponential_abs,
		exponential2_abs,
		linear_abs
	};

	enum class texture_dimension : u8
	{
		dimension1d,
		dimension2d,
		dimension3d,
	};

	enum class texture_wrap_mode : u8
	{
		wrap,
		mirror,
		clamp_to_edge,
		border,
		clamp,
		mirror_once_clamp_to_edge,
		mirror_once_border,
		mirror_once_clamp,
	};

	enum class texture_max_anisotropy : u8
	{
		x1,
		x2,
		x4,
		x6,
		x8,
		x10,
		x12,
		x16,
	};

	enum class texture_minify_filter : u8
	{
		nearest, ///< no filtering, mipmap base level
		linear, ///< linear filtering, mipmap base level
		nearest_nearest, ///< no filtering, closest mipmap level
		linear_nearest, ///< linear filtering, closest mipmap level
		nearest_linear, ///< no filtering, linear mix between closest mipmap levels
		linear_linear, ///< linear filtering, linear mix between closest mipmap levels
		convolution_min, ///< Unknow mode but looks close to linear_linear
	};

	enum class texture_magnify_filter : u8
	{
		nearest, ///< no filtering
		linear, ///< linear filtering
		convolution_mag, ///< Unknow mode but looks close to linear
	};
}

enum
{
	CELL_GCM_DISPLAY_FLIP_STATUS_ = 0,
	CELL_GCM_DISPLAY_FLIP_STATUS_WAITING = 1,
};

enum
{
	CELL_GCM_LOCATION_LOCAL = 0,
	CELL_GCM_LOCATION_MAIN = 1,
};

enum
{
	CELL_GCM_FREQUENCY_MODULO = 1,
	CELL_GCM_FREQUENCY_DIVIDE = 0,
};

enum CellRescTableElement
{
	CELL_RESC_ELEMENT_HALF = 0,
	CELL_RESC_ELEMENT_FLOAT = 1,
};

enum
{
	CELL_GCM_FLAT = 0x1D00,
	CELL_GCM_SMOOTH = 0x1D01,
};

enum
{
	CELL_GCM_SYSTEM_MODE_IOMAP_512MB = 1,
};

// GCM Texture
enum
{
	// Color Flag
	CELL_GCM_TEXTURE_B8 = 0x81,
	CELL_GCM_TEXTURE_A1R5G5B5 = 0x82,
	CELL_GCM_TEXTURE_A4R4G4B4 = 0x83,
	CELL_GCM_TEXTURE_R5G6B5 = 0x84,
	CELL_GCM_TEXTURE_A8R8G8B8 = 0x85,
	CELL_GCM_TEXTURE_COMPRESSED_DXT1 = 0x86,
	CELL_GCM_TEXTURE_COMPRESSED_DXT23 = 0x87,
	CELL_GCM_TEXTURE_COMPRESSED_DXT45 = 0x88,
	CELL_GCM_TEXTURE_G8B8 = 0x8B,
	CELL_GCM_TEXTURE_R6G5B5 = 0x8F,
	CELL_GCM_TEXTURE_DEPTH24_D8 = 0x90,
	CELL_GCM_TEXTURE_DEPTH24_D8_FLOAT = 0x91,
	CELL_GCM_TEXTURE_DEPTH16 = 0x92,
	CELL_GCM_TEXTURE_DEPTH16_FLOAT = 0x93,
	CELL_GCM_TEXTURE_X16 = 0x94,
	CELL_GCM_TEXTURE_Y16_X16 = 0x95,
	CELL_GCM_TEXTURE_R5G5B5A1 = 0x97,
	CELL_GCM_TEXTURE_COMPRESSED_HILO8 = 0x98,
	CELL_GCM_TEXTURE_COMPRESSED_HILO_S8 = 0x99,
	CELL_GCM_TEXTURE_W16_Z16_Y16_X16_FLOAT = 0x9A,
	CELL_GCM_TEXTURE_W32_Z32_Y32_X32_FLOAT = 0x9B,
	CELL_GCM_TEXTURE_X32_FLOAT = 0x9C,
	CELL_GCM_TEXTURE_D1R5G5B5 = 0x9D,
	CELL_GCM_TEXTURE_D8R8G8B8 = 0x9E,
	CELL_GCM_TEXTURE_Y16_X16_FLOAT = 0x9F,
	CELL_GCM_TEXTURE_COMPRESSED_B8R8_G8R8 = 0xAD,
	CELL_GCM_TEXTURE_COMPRESSED_R8B8_R8G8 = 0xAE,

	// Swizzle Flag
	CELL_GCM_TEXTURE_SZ = 0x00,
	CELL_GCM_TEXTURE_LN = 0x20,

	// Normalization Flag
	CELL_GCM_TEXTURE_NR = 0x00,
	CELL_GCM_TEXTURE_UN = 0x40,
};

// GCM Surface
enum
{
	// Surface type
	CELL_GCM_SURFACE_PITCH = 1,
	CELL_GCM_SURFACE_SWIZZLE = 2,
};

enum
{
	// Transfer operations
	CELL_GCM_TRANSFER_OPERATION_SRCCOPY_AND = 0,
	CELL_GCM_TRANSFER_OPERATION_ROP_AND = 1,
	CELL_GCM_TRANSFER_OPERATION_BLEND_AND = 2,
	CELL_GCM_TRANSFER_OPERATION_SRCCOPY = 3,
	CELL_GCM_TRANSFER_OPERATION_SRCCOPY_PREMULT = 4,
	CELL_GCM_TRANSFER_OPERATION_BLEND_PREMULT = 5,

	CELL_GCM_TRANSFER_ORIGIN_CENTER = 1,
	CELL_GCM_TRANSFER_ORIGIN_CORNER = 2,

	CELL_GCM_TRANSFER_INTERPOLATOR_ZOH = 0,
	CELL_GCM_TRANSFER_INTERPOLATOR_FOH = 1,

	// Destination Format conversions
	CELL_GCM_TRANSFER_SURFACE_FORMAT_R5G6B5 = 4,
	CELL_GCM_TRANSFER_SURFACE_FORMAT_A8R8G8B8 = 10,
	CELL_GCM_TRANSFER_SURFACE_FORMAT_Y32 = 11,

	// Source Format conversions
	CELL_GCM_TRANSFER_SCALE_FORMAT_A1R5G5B5 = 1,
	CELL_GCM_TRANSFER_SCALE_FORMAT_X1R5G5B5 = 2,
	CELL_GCM_TRANSFER_SCALE_FORMAT_A8R8G8B8 = 3,
	CELL_GCM_TRANSFER_SCALE_FORMAT_X8R8G8B8 = 4,
	CELL_GCM_TRANSFER_SCALE_FORMAT_CR8YB8CB8YA8 = 5,
	CELL_GCM_TRANSFER_SCALE_FORMAT_YB8CR8YA8CB8 = 6,
	CELL_GCM_TRANSFER_SCALE_FORMAT_R5G6B5 = 7,
	CELL_GCM_TRANSFER_SCALE_FORMAT_Y8 = 8,
	CELL_GCM_TRANSFER_SCALE_FORMAT_AY8 = 9,
	CELL_GCM_TRANSFER_SCALE_FORMAT_EYB8ECR8EYA8ECB8 = 10,
	CELL_GCM_TRANSFER_SCALE_FORMAT_ECR8EYB8ECB8EYA8 = 11,
	CELL_GCM_TRANSFER_SCALE_FORMAT_A8B8G8R8 = 12,
	CELL_GCM_TRANSFER_SCALE_FORMAT_X8B8G8R8 = 13,
};

enum
{
	CELL_GCM_TEXTURE_UNSIGNED_REMAP_NORMAL = 0,
	CELL_GCM_TEXTURE_UNSIGNED_REMAP_BIASED = 1,

	CELL_GCM_TEXTURE_SIGNED_REMAP_NORMAL = 0x0,
	CELL_GCM_TEXTURE_SIGNED_REMAP_CLAMPED = 0x3,

	CELL_GCM_TEXTURE_ZFUNC_NEVER = 0,
	CELL_GCM_TEXTURE_ZFUNC_LESS = 1,
	CELL_GCM_TEXTURE_ZFUNC_EQUAL = 2,
	CELL_GCM_TEXTURE_ZFUNC_LEQUAL = 3,
	CELL_GCM_TEXTURE_ZFUNC_GREATER = 4,
	CELL_GCM_TEXTURE_ZFUNC_NOTEQUAL = 5,
	CELL_GCM_TEXTURE_ZFUNC_GEQUAL = 6,
	CELL_GCM_TEXTURE_ZFUNC_ALWAYS = 7,

	CELL_GCM_TEXTURE_GAMMA_R = 1 << 0,
	CELL_GCM_TEXTURE_GAMMA_G = 1 << 1,
	CELL_GCM_TEXTURE_GAMMA_B = 1 << 2,
	CELL_GCM_TEXTURE_GAMMA_A = 1 << 3,

	CELL_GCM_TEXTURE_ANISO_SPREAD_0_50_TEXEL = 0x0,
	CELL_GCM_TEXTURE_ANISO_SPREAD_1_00_TEXEL = 0x1,
	CELL_GCM_TEXTURE_ANISO_SPREAD_1_125_TEXEL = 0x2,
	CELL_GCM_TEXTURE_ANISO_SPREAD_1_25_TEXEL = 0x3,
	CELL_GCM_TEXTURE_ANISO_SPREAD_1_375_TEXEL = 0x4,
	CELL_GCM_TEXTURE_ANISO_SPREAD_1_50_TEXEL = 0x5,
	CELL_GCM_TEXTURE_ANISO_SPREAD_1_75_TEXEL = 0x6,
	CELL_GCM_TEXTURE_ANISO_SPREAD_2_00_TEXEL = 0x7,

	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX0_U = 1 << 0,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX0_V = 1 << 1,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX0_P = 1 << 2,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX0_Q = 1 << 3,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX1_U = 1 << 4,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX1_V = 1 << 5,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX1_P = 1 << 6,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX1_Q = 1 << 7,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX2_U = 1 << 8,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX2_V = 1 << 9,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX2_P = 1 << 10,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX2_Q = 1 << 11,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX3_U = 1 << 12,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX3_V = 1 << 13,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX3_P = 1 << 14,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX3_Q = 1 << 15,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX4_U = 1 << 16,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX4_V = 1 << 17,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX4_P = 1 << 18,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX4_Q = 1 << 19,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX5_U = 1 << 20,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX5_V = 1 << 21,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX5_P = 1 << 22,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX5_Q = 1 << 23,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX6_U = 1 << 24,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX6_V = 1 << 25,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX6_P = 1 << 26,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX6_Q = 1 << 27,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX7_U = 1 << 28,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX7_V = 1 << 29,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX7_P = 1 << 30,
	CELL_GCM_TEXTURE_CYLINDRICAL_WRAP_ENABLE_TEX7_Q = 1 << 31,

	CELL_GCM_COLOR_MASK_B = 1 << 0,
	CELL_GCM_COLOR_MASK_G = 1 << 8,
	CELL_GCM_COLOR_MASK_R = 1 << 16,
	CELL_GCM_COLOR_MASK_A = 1 << 24,

	CELL_GCM_COLOR_MASK_MRT1_A = 1 << 4,
	CELL_GCM_COLOR_MASK_MRT1_R = 1 << 5,
	CELL_GCM_COLOR_MASK_MRT1_G = 1 << 6,
	CELL_GCM_COLOR_MASK_MRT1_B = 1 << 7,
	CELL_GCM_COLOR_MASK_MRT2_A = 1 << 8,
	CELL_GCM_COLOR_MASK_MRT2_R = 1 << 9,
	CELL_GCM_COLOR_MASK_MRT2_G = 1 << 10,
	CELL_GCM_COLOR_MASK_MRT2_B = 1 << 11,
	CELL_GCM_COLOR_MASK_MRT3_A = 1 << 12,
	CELL_GCM_COLOR_MASK_MRT3_R = 1 << 13,
	CELL_GCM_COLOR_MASK_MRT3_G = 1 << 14,
	CELL_GCM_COLOR_MASK_MRT3_B = 1 << 15,

	CELL_GCM_NEVER = 0x0200,
	CELL_GCM_LESS = 0x0201,
	CELL_GCM_EQUAL = 0x0202,
	CELL_GCM_LEQUAL = 0x0203,
	CELL_GCM_GREATER = 0x0204,
	CELL_GCM_NOTEQUAL = 0x0205,
	CELL_GCM_GEQUAL = 0x0206,
	CELL_GCM_ALWAYS = 0x0207,

	CELL_GCM_ZERO = 0,
	CELL_GCM_ONE = 1,
	CELL_GCM_SRC_COLOR = 0x0300,
	CELL_GCM_ONE_MINUS_SRC_COLOR = 0x0301,
	CELL_GCM_SRC_ALPHA = 0x0302,
	CELL_GCM_ONE_MINUS_SRC_ALPHA = 0x0303,
	CELL_GCM_DST_ALPHA = 0x0304,
	CELL_GCM_ONE_MINUS_DST_ALPHA = 0x0305,
	CELL_GCM_DST_COLOR = 0x0306,
	CELL_GCM_ONE_MINUS_DST_COLOR = 0x0307,
	CELL_GCM_SRC_ALPHA_SATURATE = 0x0308,
	CELL_GCM_CONSTANT_COLOR = 0x8001,
	CELL_GCM_ONE_MINUS_CONSTANT_COLOR = 0x8002,
	CELL_GCM_CONSTANT_ALPHA = 0x8003,
	CELL_GCM_ONE_MINUS_CONSTANT_ALPHA = 0x8004,

	CELL_GCM_FUNC_ADD = 0x8006,
	CELL_GCM_MIN = 0x8007,
	CELL_GCM_MAX = 0x8008,
	CELL_GCM_FUNC_SUBTRACT = 0x800A,
	CELL_GCM_FUNC_REVERSE_SUBTRACT = 0x800B,
	CELL_GCM_FUNC_REVERSE_SUBTRACT_SIGNED = 0x0000F005,
	CELL_GCM_FUNC_ADD_SIGNED = 0x0000F006,
	CELL_GCM_FUNC_REVERSE_ADD_SIGNED = 0x0000F007,

	CELL_GCM_FRONT = 0x0404,
	CELL_GCM_BACK = 0x0405,
	CELL_GCM_FRONT_AND_BACK = 0x0408,

	CELL_GCM_CW = 0x0900,
	CELL_GCM_CCW = 0x0901,

	CELL_GCM_CLEAR = 0x1500,
	CELL_GCM_AND = 0x1501,
	CELL_GCM_AND_REVERSE = 0x1502,
	CELL_GCM_COPY = 0x1503,
	CELL_GCM_AND_INVERTED = 0x1504,
	CELL_GCM_NOOP = 0x1505,
	CELL_GCM_XOR = 0x1506,
	CELL_GCM_OR = 0x1507,
	CELL_GCM_NOR = 0x1508,
	CELL_GCM_EQUIV = 0x1509,
	CELL_GCM_INVERT = 0x150A,
	CELL_GCM_OR_REVERSE = 0x150B,
	CELL_GCM_COPY_INVERTED = 0x150C,
	CELL_GCM_OR_INVERTED = 0x150D,
	CELL_GCM_NAND = 0x150E,
	CELL_GCM_SET = 0x150F,

	CELL_GCM_KEEP = 0x1E00,
	CELL_GCM_REPLACE = 0x1E01,
	CELL_GCM_INCR = 0x1E02,
	CELL_GCM_DECR = 0x1E03,
	CELL_GCM_INCR_WRAP = 0x8507,
	CELL_GCM_DECR_WRAP = 0x8508,

	CELL_GCM_TRANSFER_LOCAL_TO_LOCAL = 0,
	CELL_GCM_TRANSFER_MAIN_TO_LOCAL = 1,
	CELL_GCM_TRANSFER_LOCAL_TO_MAIN = 2,
	CELL_GCM_TRANSFER_MAIN_TO_MAIN = 3,

	CELL_GCM_INVALIDATE_TEXTURE = 1,
	CELL_GCM_INVALIDATE_VERTEX_TEXTURE = 2,

	CELL_GCM_COMPMODE_DISABLED = 0,
	CELL_GCM_COMPMODE_C32_2X1 = 7,
	CELL_GCM_COMPMODE_C32_2X2 = 8,
	CELL_GCM_COMPMODE_Z32_SEPSTENCIL = 9,
	CELL_GCM_COMPMODE_Z32_SEPSTENCIL_REG = 10,
	CELL_GCM_COMPMODE_Z32_SEPSTENCIL_REGULAR = 10,
	CELL_GCM_COMPMODE_Z32_SEPSTENCIL_DIAGONAL = 11,
	CELL_GCM_COMPMODE_Z32_SEPSTENCIL_ROTATED = 12,

	CELL_GCM_ZCULL_Z16 = 1,
	CELL_GCM_ZCULL_Z24S8 = 2,
	CELL_GCM_ZCULL_MSB = 0,
	CELL_GCM_ZCULL_LONES = 1,
	CELL_GCM_ZCULL_LESS = 0,
	CELL_GCM_ZCULL_GREATER = 1,

	CELL_GCM_SCULL_SFUNC_NEVER = 0,
	CELL_GCM_SCULL_SFUNC_LESS = 1,
	CELL_GCM_SCULL_SFUNC_EQUAL = 2,
	CELL_GCM_SCULL_SFUNC_LEQUAL = 3,
	CELL_GCM_SCULL_SFUNC_GREATER = 4,
	CELL_GCM_SCULL_SFUNC_NOTEQUAL = 5,
	CELL_GCM_SCULL_SFUNC_GEQUAL = 6,
	CELL_GCM_SCULL_SFUNC_ALWAYS = 7,

	CELL_GCM_ATTRIB_OUTPUT_MASK_FRONTDIFFUSE = 1 << 0,
	CELL_GCM_ATTRIB_OUTPUT_MASK_FRONTSPECULAR = 1 << 1,
	CELL_GCM_ATTRIB_OUTPUT_MASK_BACKDIFFUSE = 1 << 2,
	CELL_GCM_ATTRIB_OUTPUT_MASK_BACKSPECULAR = 1 << 3,
	CELL_GCM_ATTRIB_OUTPUT_MASK_FOG = 1 << 4,
	CELL_GCM_ATTRIB_OUTPUT_MASK_POINTSIZE = 1 << 5,
	CELL_GCM_ATTRIB_OUTPUT_MASK_UC0 = 1 << 6,
	CELL_GCM_ATTRIB_OUTPUT_MASK_UC1 = 1 << 7,
	CELL_GCM_ATTRIB_OUTPUT_MASK_UC2 = 1 << 8,
	CELL_GCM_ATTRIB_OUTPUT_MASK_UC3 = 1 << 9,
	CELL_GCM_ATTRIB_OUTPUT_MASK_UC4 = 1 << 10,
	CELL_GCM_ATTRIB_OUTPUT_MASK_UC5 = 1 << 11,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX8 = 1 << 12,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX9 = 1 << 13,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX0 = 1 << 14,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX1 = 1 << 15,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX2 = 1 << 16,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX3 = 1 << 17,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX4 = 1 << 18,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX5 = 1 << 19,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX6 = 1 << 20,
	CELL_GCM_ATTRIB_OUTPUT_MASK_TEX7 = 1 << 21,

	CELL_GCM_POLYGON_MODE_POINT = 0x1B00,
	CELL_GCM_POLYGON_MODE_LINE = 0x1B01,
	CELL_GCM_POLYGON_MODE_FILL = 0x1B02,

	CELL_GCM_TRUE = 1,
	CELL_GCM_FALSE = 0,

	CELL_GCM_USER_CLIP_PLANE_DISABLE = 0,
	CELL_GCM_USER_CLIP_PLANE_ENABLE_LT = 1,
	CELL_GCM_USER_CLIP_PLANE_ENABLE_GE = 2,
};

enum
{
	CELL_GCM_SHADER_CONTROL_DEPTH_EXPORT = 0xe, ///< shader program exports the depth of the shaded fragment
	CELL_GCM_SHADER_CONTROL_32_BITS_EXPORTS = 0x40 ///< shader program exports 32 bits registers values (instead of 16 bits ones)
};

// GCM Reports
enum
{
	CELL_GCM_ZPASS_PIXEL_CNT = 1,
	CELL_GCM_ZCULL_STATS = 2,
	CELL_GCM_ZCULL_STATS1 = 3,
	CELL_GCM_ZCULL_STATS2 = 4,
	CELL_GCM_ZCULL_STATS3 = 5,
};

// GPU Class Handles
enum
{
	CELL_GCM_CONTEXT_DMA_MEMORY_FRAME_BUFFER = 0xFEED0000, // Local memory
	CELL_GCM_CONTEXT_DMA_MEMORY_HOST_BUFFER = 0xFEED0001, // Main memory
	CELL_GCM_CONTEXT_SURFACE2D = 0x313371C3,
	CELL_GCM_CONTEXT_SWIZZLE2D = 0x31337A73,
	CELL_GCM_CONTEXT_DMA_TO_MEMORY_GET_REPORT = 0x66626660,
	CELL_GCM_CONTEXT_DMA_REPORT_LOCATION_MAIN = 0xBAD68000,
	CELL_GCM_CONTEXT_DMA_NOTIFY_MAIN_0 = 0x6660420F,
};
